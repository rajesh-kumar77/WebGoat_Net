# See FortifyVulnerabilityExporter documentation for FoD connection settings and release selection

export:
  from: fod
  to: json.github.sast

fod:
  release:
    embed:                                             # Load static scan summary as required for GitHub output
      - propertyName: staticScanSummary
        uri: /api/v3/scans/{currentStaticScanId}/summary 
  vuln:
    filterParam: scantype:Static                       # Have FoD return only static issues 
    embed:                                             # Also load details as required for GitLab output
      - subEntity: details
      - subEntity: recommendations
      - subEntity: traces

export.dir: ${GITHUB_WORKSPACE:${export.default.dir}}  # Unless overridden, use GITHUB_WORKSPACE if defined, otherwise default export dir
sarif.output: ${export.dir}/gh-fortify-sast.sarif      # Define default output file location and name
json.github.sast.output:
  stdout: false                                        # Disabled by default to avoid vulnerability data being exposed through log files
  pretty: true                                         # Useful for debugging, disable for optimal performance
  file:   ${sarif.output}                              # Output file
  
  spring.config.activate.on-loader-plugin: fod

json.github.sast.filter.expr: vuln.scantype=='Static'
json.github.sast.format: 
  fields:
    "[$schema]": https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json 
    version: '2.1.0'
    runs:
      - tool:
          driver:
            name: 'Fortify on Demand'   
            version: SCA $[release.staticScanSummary?.staticScanSummaryDetails?.engineVersion?:'version unknown']; Rulepack $[release.staticScanSummary?.staticScanSummaryDetails?.rulePackVersion?:'version unknown']
            rules: $[vulnerabilityMappers.rules.get()]
        results: $[#check(vulnerabilityMappers.result.get().size()>1000, "GitHub does not support importing more than 1000 vulnerabilities. Please clean the scan results or update vulnerability search criteria.")?vulnerabilityMappers.result.get():{}]
  vulnerabilityMappers:
    rules.fields:
      id: $[vuln.id+'']
      shortDescription.text: $[vuln.category]
      fullDescription.text: $[#htmlToText(vuln.details?.summary)]
      help:
        text: $[#htmlToText(vuln.details?.explanation)+'\n\n'+#htmlToText(vuln.recommendations?.recommendations)+"\n\nFor more information, see "+vuln.deepLink]
      properties:
        tags: $[vuln.cwe?.split(",")]
        precision: $[(vuln.severityString matches "(Critical|Medium)") ? "high":"low" ]
        security-severity: $[{Critical:10.0,High:8.9,Medium:6.9,Low:3.9}.get(vuln.severityString)+'']
    result.fields:
      ruleId: $[vuln.id+'']
      message: 
        text: $[#htmlToText(vuln.details?.summary)]
      level: $[(vuln.severityString matches "(Critical|High)") ? "warning":"note" ]
      partialFingerprints:
        issueInstanceId: $[vuln.instanceId]
      locations:
        - physicalLocation:
            artifactLocation:
              uri: $[vuln.primaryLocationFull]
            region:
              startLine: $[vuln.lineNumber==0?1:vuln.lineNumber]
              endLine: $[vuln.lineNumber==0?1:vuln.lineNumber]
              startColumn: $[1]  # Needs to be specified as an expression in order to end up as integer instead of string in JSON
              endColumn: $[80]
      codeFlows: |-
        $[ 
          vuln.traces==null ? {}
            : 
            {{ 
                threadFlows: vuln.traces.![{
                  locations: traceEntries?.![{
                    location: {
                        message: {
                            text: #htmlToText(displayText).replaceAll("&nbsp;", " ")
                        },
                        physicalLocation: {
                            artifactLocation: {
                                uri: location
                            },
                            region: {
                                startLine: lineNumber
                            }
                        }
                    }
                  }] 
                }] 
            }} 
        ]
      
